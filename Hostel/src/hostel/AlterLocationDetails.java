/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hostel;

/**
 *
 * @author hp
 */

import static hostel.AlterFamilyDetails.name;
import static hostel.EntryForm2.Error;
import static hostel.EntryForm4.Error;
import static hostel.EntryForm4.Pincode;
import java.sql.ResultSet;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.sql.SQLException;

public class AlterLocationDetails extends javax.swing.JFrame {

    static String name = AlterPerson.Name;
    public static InvalidData Error = new InvalidData();
    Statement stmnt;
        
    /**
     * Creates new form AlterLocationDetails
     */
    public AlterLocationDetails() {
        initComponents();
    
        CurrentHeading1.setText(name);
        
        try
        {
            try
            {
                Class.forName("com.mysql.jdbc.Driver");
                
            }
            
            catch(ClassNotFoundException b)
            {
                System.out.println("Error");
                System.out.println(b);
            }
            
            String userID = "root";
            String password = "iamshlok";
            String URL = "jdbc:mysql://localhost:3306/hostel";
            
            Connection connect = DriverManager.getConnection(URL, userID, password);
            stmnt = connect.createStatement();
            
            System.out.println("Connection Established!");
            
            String query = "SELECT * FROM LocationDetails Where(personName = '" + name + "');";
            ResultSet rs;
            
            rs = stmnt.executeQuery(query);
            rs.next();
            
            StateComboBox.setSelectedItem(rs.getString(2));
            CityTextField.setText(rs.getString(3));
            PinCodeField.setText(rs.getString(4));
            
        }
        
        catch(SQLException a)
        {
            System.out.println("Error");
            System.out.println(a);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator2 = new javax.swing.JSeparator();
        CurrentHeading1 = new javax.swing.JLabel();
        Heading = new javax.swing.JLabel();
        CityTextField = new javax.swing.JTextField();
        State = new javax.swing.JLabel();
        StateComboBox = new javax.swing.JComboBox();
        City = new javax.swing.JLabel();
        PinCode = new javax.swing.JLabel();
        PinCodeField = new javax.swing.JTextField();
        Save = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jSeparator2.setAutoscrolls(true);
        jSeparator2.setFocusable(true);

        CurrentHeading1.setFont(new java.awt.Font("Comic Sans MS", 2, 14)); // NOI18N
        CurrentHeading1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CurrentHeading1.setText("Empty");

        Heading.setFont(new java.awt.Font("Comic Sans MS", 2, 14)); // NOI18N
        Heading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Heading.setText("Location");

        CityTextField.setFont(new java.awt.Font("Comic Sans MS", 2, 11)); // NOI18N
        CityTextField.setText("<Empty>");

        State.setFont(new java.awt.Font("Comic Sans MS", 2, 12)); // NOI18N
        State.setText("State");

        StateComboBox.setFont(new java.awt.Font("Comic Sans MS", 2, 11)); // NOI18N
        StateComboBox.setMaximumRowCount(10);
        StateComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Empty>", "Jammu And Kashmir", "Haryana", "Punjab", "Uttar Pradesh", "Uttarakhand", "Sikkim", "Arunachal Pradesh", "Assam", "Meghalaya", "Mizoram", "Tripura", "Nagaland", "Manipur", "Madhya Pradesh", "Jharkhand", "Chattisgarh", "Bihar", "West Bengal", "Gujarat", "Rajasthan", "Maharashtra", "Kerela", "Karnataka", "Tamil Nadu", "Telangana", "Andra Pradesh", "Goa", "Delhi" }));
        StateComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StateComboBoxActionPerformed(evt);
            }
        });

        City.setFont(new java.awt.Font("Comic Sans MS", 2, 12)); // NOI18N
        City.setText("City");

        PinCode.setFont(new java.awt.Font("Comic Sans MS", 2, 12)); // NOI18N
        PinCode.setText("Pin Code");

        PinCodeField.setFont(new java.awt.Font("Comic Sans MS", 2, 11)); // NOI18N
        PinCodeField.setText("<Empty>");
        PinCodeField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                PinCodeFieldFocusLost(evt);
            }
        });

        Save.setFont(new java.awt.Font("Comic Sans MS", 2, 12)); // NOI18N
        Save.setText("Save & Exit");
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Save, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(PinCode, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(PinCodeField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(State, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(CurrentHeading1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(Heading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(City, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(105, Short.MAX_VALUE)
                    .addComponent(StateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CurrentHeading1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Heading, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(State)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(City)
                    .addComponent(CityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PinCode)
                    .addComponent(PinCodeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Save)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(56, 56, 56)
                    .addComponent(StateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(114, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void StateComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StateComboBoxActionPerformed

    }//GEN-LAST:event_StateComboBoxActionPerformed

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
        // TODO add your handling code here:
    
    if(StateComboBox.getSelectedItem().equals("<Empty>"))
    {
        Error = new InvalidData();
        Error.setVisible(true);
    }
    
    else
    {
        if(CityTextField.getText().equals("<Empty>") || (CityTextField.getText().equals("")))
        {
            Error = new InvalidData();
            Error.setVisible(true);
        }
        
        if(PinCodeField.getText().equals("") || (PinCodeField.getText().equals("<Empty>")))
        {
            Error = new InvalidData();
            Error.setVisible(true);
        }
        else
        {
            try
            {
                String query = "DELETE FROM LocationDetails WHERE(personName = '" + name + "');";
                stmnt.executeUpdate(query);

                System.out.println("DELETE DONE!");

                query = "INSERT INTO LocationDetails VALUES('" + name + "', '" + StateComboBox.getSelectedItem() + "', '" + CityTextField.getText() + "', " + PinCodeField.getText()
                        + ");";

                stmnt.executeUpdate(query);
                System.out.println("Save DONE!");

            }

            catch(SQLException b)
            {
                System.out.println("Error");
                System.out.println(b);
            }

            this.setVisible(false);
        }
    }
    }//GEN-LAST:event_SaveActionPerformed

    private void PinCodeFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PinCodeFieldFocusLost
        // TODO add your handling code here:
    if(PinCodeField.getText().equals(""))
        Pincode = "";
    else
    {
        try
        {
            Pincode = PinCodeField.getText();
            int p = Integer.parseInt(Pincode);
        }
        
        catch(NumberFormatException a)
        {
            PinCodeField.setText("");
            Error = new InvalidData();
            Error.setVisible(true);
        }
        Pincode = PinCodeField.getText();
    }                            
    }//GEN-LAST:event_PinCodeFieldFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AlterLocationDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AlterLocationDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AlterLocationDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AlterLocationDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AlterLocationDetails().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel City;
    private javax.swing.JTextField CityTextField;
    private javax.swing.JLabel CurrentHeading1;
    private javax.swing.JLabel Heading;
    private javax.swing.JLabel PinCode;
    private javax.swing.JTextField PinCodeField;
    private javax.swing.JButton Save;
    private javax.swing.JLabel State;
    private javax.swing.JComboBox StateComboBox;
    private javax.swing.JSeparator jSeparator2;
    // End of variables declaration//GEN-END:variables
}
