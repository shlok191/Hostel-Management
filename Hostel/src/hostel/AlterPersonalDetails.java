/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hostel;

/**
 *
 * @author hp
 */

import static hostel.EntryForm2.Date;
import static hostel.EntryForm2.Error;
import static hostel.EntryForm2.PhoneNumber;
import static hostel.EntryForm2.p;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.*;

public class AlterPersonalDetails extends javax.swing.JFrame {

    /**
     *
     */
    static String name = AlterPerson.Name;
    ResultSet RS;
    Statement stmnt;
    static Date date = new Date();
    String namechange;
    public static InvalidData Error = new InvalidData();    
    /**
     * Creates new form AlterPersonalDetails
     */
    public AlterPersonalDetails() {
        initComponents();
        
        Scanner input = new Scanner(System.in);
        
        CurrentHeading1.setText(name);
        
        try
        {
            try
            {
                Class.forName("com.mysql.jdbc.Driver");
            }
            
            catch(ClassNotFoundException a)
            {
                System.out.println("Error class not Found");
            }
            
            String userID = "root";
            String password = "iamshlok";
            String URL = "jdbc:mysql://localhost:3306/hostel";
            
            Connection connect = DriverManager.getConnection(URL, userID, password);
            stmnt = connect.createStatement();
            
            System.out.println("Connection Established!");
            
            String query = "SELECT * FROM PDetails Where(PersonName = '" + name + "');";
            
            RS = stmnt.executeQuery(query);
            RS.next();
            
            Name.setText(RS.getString(1));
            namechange = Name.getText();
            
            PIDField.setText(RS.getString(2));
            BloodComboBox1.setSelectedItem(RS.getString(3));
            NumberField1.setText(RS.getString(4));
            DOBField1.setDate(RS.getDate(5));
            DiseasesArea1.setText(RS.getString(6));
        }
        
        catch(SQLException a)
        {
            System.out.println(a);
            System.out.println("Error");
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PersonName = new javax.swing.JLabel();
        BloodGroup = new javax.swing.JLabel();
        NameField = new javax.swing.JTextField();
        BloodComboBox = new javax.swing.JComboBox();
        PersonDOB = new javax.swing.JLabel();
        PersonIDHeading = new javax.swing.JLabel();
        PersonNumber = new javax.swing.JLabel();
        PersonIDField = new javax.swing.JLabel();
        NumberField = new javax.swing.JTextField();
        PersonDisease = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        DiseasesArea = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        BloodGroup2 = new javax.swing.JLabel();
        CurrentHeading1 = new javax.swing.JLabel();
        Heading = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        PersonName1 = new javax.swing.JLabel();
        BloodGroup1 = new javax.swing.JLabel();
        Name = new javax.swing.JTextField();
        BloodComboBox1 = new javax.swing.JComboBox();
        PersonDOB1 = new javax.swing.JLabel();
        PersonNumber1 = new javax.swing.JLabel();
        NumberField1 = new javax.swing.JTextField();
        PersonDisease1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        DiseasesArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        BloodGroup3 = new javax.swing.JLabel();
        PIDField = new javax.swing.JLabel();
        DOBField1 = new org.jdesktop.swingx.JXDatePicker();

        PersonName.setFont(new java.awt.Font("Comic Sans MS", 2, 12)); // NOI18N
        PersonName.setText("Name");

        BloodGroup.setFont(new java.awt.Font("Comic Sans MS", 2, 12)); // NOI18N
        BloodGroup.setText("Blood Group");

        NameField.setFont(new java.awt.Font("Comic Sans MS", 2, 11)); // NOI18N

        BloodComboBox.setFont(new java.awt.Font("Comic Sans MS", 2, 11)); // NOI18N
        BloodComboBox.setMaximumRowCount(5);
        BloodComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Empty>", "A+", "O+", "B+", "AB+", "A-", "O-", "B-", "AB-" }));

        PersonDOB.setFont(new java.awt.Font("Comic Sans MS", 2, 12)); // NOI18N
        PersonDOB.setText("Date of Birth");

        PersonIDHeading.setFont(new java.awt.Font("Comic Sans MS", 2, 12)); // NOI18N
        PersonIDHeading.setText("Person ID");

        PersonNumber.setFont(new java.awt.Font("Comic Sans MS", 2, 12)); // NOI18N
        PersonNumber.setText("Phone Number");

        PersonIDField.setFont(new java.awt.Font("Comic Sans MS", 2, 12)); // NOI18N
        PersonIDField.setText("Empty");

        NumberField.setFont(new java.awt.Font("Comic Sans MS", 2, 11)); // NOI18N

        PersonDisease.setFont(new java.awt.Font("Comic Sans MS", 2, 12)); // NOI18N
        PersonDisease.setText("Diseases");

        DiseasesArea.setColumns(20);
        DiseasesArea.setFont(new java.awt.Font("Comic Sans MS", 2, 13)); // NOI18N
        DiseasesArea.setRows(5);
        jScrollPane2.setViewportView(DiseasesArea);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        BloodGroup2.setFont(new java.awt.Font("Comic Sans MS", 2, 12)); // NOI18N
        BloodGroup2.setText("Blood Group");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        CurrentHeading1.setFont(new java.awt.Font("Comic Sans MS", 2, 14)); // NOI18N
        CurrentHeading1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CurrentHeading1.setText("Empty");

        Heading.setFont(new java.awt.Font("Comic Sans MS", 2, 14)); // NOI18N
        Heading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Heading.setText("Personal Details");

        jSeparator2.setAutoscrolls(true);
        jSeparator2.setFocusable(true);

        PersonName1.setFont(new java.awt.Font("Comic Sans MS", 2, 12)); // NOI18N
        PersonName1.setText("Name");

        BloodGroup1.setFont(new java.awt.Font("Comic Sans MS", 2, 12)); // NOI18N
        BloodGroup1.setText("Blood Group");

        Name.setFont(new java.awt.Font("Comic Sans MS", 2, 11)); // NOI18N
        Name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NameActionPerformed(evt);
            }
        });

        BloodComboBox1.setFont(new java.awt.Font("Comic Sans MS", 2, 11)); // NOI18N
        BloodComboBox1.setMaximumRowCount(5);
        BloodComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Empty>", "A+", "O+", "B+", "AB+", "A-", "O-", "B-", "AB-" }));

        PersonDOB1.setFont(new java.awt.Font("Comic Sans MS", 2, 12)); // NOI18N
        PersonDOB1.setText("Date of Birth");

        PersonNumber1.setFont(new java.awt.Font("Comic Sans MS", 2, 12)); // NOI18N
        PersonNumber1.setText("Phone Number");

        NumberField1.setFont(new java.awt.Font("Comic Sans MS", 2, 11)); // NOI18N
        NumberField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                NumberField1FocusLost(evt);
            }
        });

        PersonDisease1.setFont(new java.awt.Font("Comic Sans MS", 2, 12)); // NOI18N
        PersonDisease1.setText("Diseases");

        DiseasesArea1.setColumns(20);
        DiseasesArea1.setFont(new java.awt.Font("Comic Sans MS", 2, 12)); // NOI18N
        DiseasesArea1.setRows(5);
        jScrollPane3.setViewportView(DiseasesArea1);

        jButton1.setFont(new java.awt.Font("Comic Sans MS", 2, 12)); // NOI18N
        jButton1.setText("Save & Exit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        BloodGroup3.setFont(new java.awt.Font("Comic Sans MS", 2, 12)); // NOI18N
        BloodGroup3.setText("Person ID");

        PIDField.setFont(new java.awt.Font("Comic Sans MS", 2, 12)); // NOI18N
        PIDField.setText("Empty");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(CurrentHeading1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Heading, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(PersonDisease1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(BloodGroup3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(BloodGroup1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(PersonName1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(Name, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                                .addComponent(PIDField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(BloodComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(PersonDOB1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(PersonNumber1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(NumberField1, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DOBField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CurrentHeading1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Heading, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PersonName1)
                    .addComponent(Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BloodGroup3)
                    .addComponent(PIDField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BloodGroup1)
                    .addComponent(BloodComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PersonNumber1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NumberField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PersonDOB1)
                    .addComponent(DOBField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(PersonDisease1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        if(Name.getText().equals(""))
        {
            Error = new InvalidData();
            Error.setVisible(true);
        }
        
        else
        {
            if(BloodComboBox1.getSelectedItem().equals("<Empty>"))
            {
                Error = new InvalidData();
                Error.setVisible(true);
            }
            
            else
            {
                if(NumberField1.getText().equals(""))
                {
                    Error = new InvalidData();
                    Error.setVisible(true);
                }
                
                else
                {
                    date = DOBField1.getDate();
                    String dat = date.toString();
     
                    if(dat.equals(""))
                    {
                        Error = new InvalidData();
                        Error.setVisible(true);
                        System.out.println("Date");
                    }
                    
                    else
                    {
                         try
                        {            
                            String query1 = "DELETE FROM PDetails WHERE(PersonName = '" + name + "');";
                            stmnt.executeUpdate(query1);

                            if(!namechange.equals(Name.getText()))
                            {
                                query1 = "UPDATE FDetails SET personName = '" + Name.getText() + "' WHERE(personName = '" + namechange + "');";
                                stmnt.executeUpdate(query1);

                                query1 = "UPDATE CDetails SET ChildName = '" + Name.getText() + "' WHERE(ChildName = '" + namechange + "');";
                                stmnt.executeUpdate(query1);

                                query1 = "UPDATE HostelDetails SET personName = '" + Name.getText() + "' WHERE(personName = '" + namechange + "');";
                                stmnt.executeUpdate(query1);

                                query1 = "UPDATE LocationDetails SET personName = '" + Name.getText() + "' WHERE(personName = '" + namechange + "');";
                                stmnt.executeUpdate(query1);

                            }

                            date = DOBField1.getDate();
                            int year = Integer.parseInt(dat.substring(24));
                            String mon;
                            int month = 0;
                            int day = Integer.parseInt(dat.substring(8,10));

                            mon = dat.substring(4, 7);

                            if(mon.equals("Mar"))
                                month = 03;

                            else if(mon.equalsIgnoreCase("Jan"))
                                month = 01;

                            else if(mon.equalsIgnoreCase("Feb"))
                                month = 02;

                            else if(mon.equalsIgnoreCase("Apr"))
                                month = 04;

                            else if(mon.equalsIgnoreCase("May"))
                                month = 05;

                            else if(mon.equalsIgnoreCase("Jun"))
                                month = 06;

                            else if(mon.equalsIgnoreCase("Jul"))
                                month = 07;

                            else if(mon.equalsIgnoreCase("Aug"))
                                month = 8;

                            else if(mon.equalsIgnoreCase("Sep"))
                                month = 9;

                            else if(mon.equalsIgnoreCase("Oct"))
                                month = 10;

                            else if(mon.equalsIgnoreCase("Nov"))
                                month = 11;

                            else if(mon.equalsIgnoreCase("Dec"))
                                month = 12;


                        System.out.println(day);
                        String Date = year + "-" + month + "-" + day; 


                            String query = "INSERT INTO PDetails VALUES('" + Name.getText() + "', " + PIDField.getText() + ", '" + BloodComboBox1.getSelectedItem() + 
                            "', " + NumberField1.getText() + ", '" + Date + "', '" + DiseasesArea1.getText() + "');";

                            stmnt.executeUpdate(query);
                        }

                        catch(SQLException a)
                        {
                            System.out.println("Error");
                            System.out.println(a);
                        }

                        this.setVisible(false);
                    }
                }
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void NameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NameActionPerformed

    private void NumberField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_NumberField1FocusLost
        // TODO add your handling code here:
        if(NumberField.getText().equals(""))
            PhoneNumber = "";
        else
        {
            try
            {
                PhoneNumber = NumberField.getText();               
                p = Long.parseLong(PhoneNumber);
            }
       
            catch(NumberFormatException a)
            {
                System.out.println("The phone number field has invalid data.");
                NumberField.setText("");
                Error = new InvalidData();
                Error.setVisible(true);
            }
            System.out.println("NumberField: " + NumberField.getText());
            PhoneNumber = NumberField.getText();       
        }
    }//GEN-LAST:event_NumberField1FocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AlterPersonalDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AlterPersonalDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AlterPersonalDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AlterPersonalDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AlterPersonalDetails().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox BloodComboBox;
    private javax.swing.JComboBox BloodComboBox1;
    private javax.swing.JLabel BloodGroup;
    private javax.swing.JLabel BloodGroup1;
    private javax.swing.JLabel BloodGroup2;
    private javax.swing.JLabel BloodGroup3;
    private javax.swing.JLabel CurrentHeading1;
    private org.jdesktop.swingx.JXDatePicker DOBField1;
    private javax.swing.JTextArea DiseasesArea;
    private javax.swing.JTextArea DiseasesArea1;
    private javax.swing.JLabel Heading;
    private javax.swing.JTextField Name;
    private javax.swing.JTextField NameField;
    private javax.swing.JTextField NumberField;
    private javax.swing.JTextField NumberField1;
    private javax.swing.JLabel PIDField;
    private javax.swing.JLabel PersonDOB;
    private javax.swing.JLabel PersonDOB1;
    private javax.swing.JLabel PersonDisease;
    private javax.swing.JLabel PersonDisease1;
    private javax.swing.JLabel PersonIDField;
    private javax.swing.JLabel PersonIDHeading;
    private javax.swing.JLabel PersonName;
    private javax.swing.JLabel PersonName1;
    private javax.swing.JLabel PersonNumber;
    private javax.swing.JLabel PersonNumber1;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
